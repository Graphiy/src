/server  Server 
  is built on NodeJS
  ExpressJS is used to serve static content and some other
  SockJS is websocket server for server-client communication

/client  Client only resources 
  Bootstrap, resources, theme, gui templates, etc
  /theme/name  Theme
    The interface has default theme, which can be entirely customized.
    /css
    /image
    /template

/app  Application
  /app/lib  Libraries
    /prototypeJS - port of prototype to nodeJS
    /Functional - functional programming in JS

/module  Module
  Extensibility model is built on modules and can be easily extended.
  There are multiple conventions for extensions:
    Type  see the list of directories
    Name  Module name
    /type/name/i18n  Localization files
    /type/name/image  images
    /type/name/config.json  configuration


/config  Configuration
  Application is highly configurable 
  /i18n/en.json  application internationalization
  /server  environments, routes, etc
  /settings.json  application defaults

