{
  "ajxpdriver": {
    "name": "wms",
    "enabled": "false",
    "label": "CONF_MESSAGE[WMS Server]",
    "description": "CONF_MESSAGE[Browse the layers served by a WMS server.]",
    "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
    "xsi:noNamespaceSchemaLocation": "file:../core.app/registry.xsd",
    "server_settings": {
      "param": {
        "name": "HOST",
        "type": "string",
        "label": "CONF_MESSAGE[Wms Server]",
        "description": "CONF_MESSAGE[Wms server url]",
        "mandatory": "true"
      }
    },
    "client_settings": {
      "icon": "plugins/access.wms/image/world.png",
      "resources": {
        "i18n": {
          "namespace": "wms",
          "path": "plugins/access.wms/i18n"
        },
        "img_library": {
          "alias": "wms_images",
          "path": "plugins/access.wms/images"
        }
      }
    },
    "registry_contributions": {
      "client_configs": {
        "template_part": {
          "id": "search_container",
          "ajxpClass": "SearchEngine",
          "options": "{}"
        },
        "component_config": {
          "className": "InfoPanel",
          "infoPanel": [
            {
              "mime": "generic_file",
              "attributes": "icon,text,preview_rich",
              "messages": {
                "message": {
                  "key": "name_string",
                  "id": "133"
                }
              },
              "html": "<div style=\"padding:10px;\"><div class=\"infoPanelImagePreview\">#{preview_rich}</div><b>#{name_string}</b> : #{text}</div>"
            },
            {
              "mime": "generic_dir",
              "attributes": "icon,text",
              "messages": {
                "message": [
                  {
                    "key": "name_string",
                    "id": "133"
                  },
                  {
                    "key": "modif_string",
                    "id": "138"
                  }
                ]
              },
              "html": "<div style=\"padding:10px;\"><div class=\"folderImage\"><img src=\"AJXP_THEME_FOLDER/image/mime/64/#{icon}\" height=\"64\" width=\"64\"></div><b>#{name_string}</b> : #{text}</div>"
            },
            {
              "mime": "no_selection",
              "attributes": "",
              "messages": {
                "message": {
                  "key": "files_string",
                  "id": "265"
                }
              },
              "html": "<div style=\"padding:10px;\"><div class=\"folderImage\"><img src=\"plugins/access.wms/image/mime/64/domtreeviewer.png\" height=\"64\" width=\"64\"></div></div>"
            }
          ]
        }
      },
      "actions": {
        "action": [
          {
            "name": "ls",
            "dirDefault": "true",
            "gui": {
              "text": "32",
              "title": "32",
              "src": "fileopen.png",
              "accessKey": "folder_access_key",
              "context": {
                "selection": "true",
                "dir": "",
                "recycle": "false",
                "actionBar": "false",
                "actionBarGroup": "get",
                "contextMenu": "true",
                "infoPanel": "false"
              },
              "selectionContext": {
                "dir": "true",
                "file": "false",
                "recycle": "false",
                "unique": "true",
                "allowedMimes": "*"
              }
            },
            "rightsContext": {
              "noUser": "true",
              "userLogged": "only",
              "read": "true",
              "write": "false",
              "adminOnly": "false"
            },
            "processing": {
              "clientCallback": {
                "prepareModal": "true",
                "$t": "var path;if(window.actionArguments && window.actionArguments.length>0){path = window.actionArguments[0];if(Object.isString(path)){path = new Item(path,false,getBaseName(path));}}else{userSelection = app.getUserSelection();if(userSelection && userSelection.isUnique() && (userSelection.hasDir() || userSelection.hasMime([\"zip\"]))){path = userSelection.getUniqueNode();}}if(path){app.updateContextData(path);}"
              },
              "serverCallback": {
                "methodName": "switchAction"
              }
            }
          },
          {
            "name": "stat",
            "processing": {
              "serverCallback": {
                "methodName": "switchAction"
              }
            }
          },
          {
            "name": "open_with",
            "fileDefault": "true",
            "gui": {
              "text": "316",
              "title": "316",
              "src": "fileopen.png",
              "accessKey": "open_with_access",
              "hasAccessKey": "true",
              "context": {
                "selection": "true",
                "dir": "",
                "recycle": "hidden",
                "behaviour": "hidden",
                "actionBar": "true",
                "contextMenu": "true",
                "infoPanel": "false",
                "actionBarGroup": "get",
                "inZip": "false"
              },
              "selectionContext": {
                "dir": "false",
                "file": "true",
                "recycle": "false",
                "unique": "true",
                "allowedMimes": "wms_layer",
                "behaviour": "hidden"
              }
            },
            "rightsContext": {
              "noUser": "true",
              "userLogged": "only",
              "read": "true",
              "write": "false",
              "adminOnly": ""
            },
            "subMenu": {
              "dynamicBuilder": "var context = window.builderContext;context.builderMenuItems = $A([]);var selectedMime = getMimeType(app.getUserSelection().getUniqueNode());var editors = app.findEditorsForMime(selectedMime);if(editors.length){var index = 0;editors.each(function(el){if(!el.openable) return;context.builderMenuItems.push({name:el.text,alt:el.title,isDefault : (index == 0),image:resolveImageSource(el.icon, '/image/action/ICON_SIZE', 22),callback:function(e){this.apply([el]);}.bind(context)} );index++;} );}if(!index){context.builderMenuItems.push({name:I18N[324],alt:I18N[324],image:resolveImageSource('button_cancel.png', '/image/action/ICON_SIZE', 22),callback:function(e){}} );}"
            },
            "processing": {
              "clientCallback": {
                "prepareModal": "false",
                "$t": "var editorData = window.actionArguments[0];if(!editorData){var selectedMime = getMimeType(app.getUserSelection().getUniqueNode());var editors = app.findEditorsForMime(selectedMime);if(editors.length){editorData = editors[0];}}if(editorData){app.loadEditorResources(editorData.resourcesManager);modal.openEditorDialog(editorData);}"
              },
              "serverCallback": {
                "methodName": "switchAction"
              }
            }
          }
        ]
      }
    },
    "class_definition": {
      "filename": "plugins/access.wms/class.WmsBrowser.php",
      "classname": "WmsBrowser"
    }
  }
}
