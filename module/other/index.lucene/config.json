{
  "indexer": {
    "id": "index.lucene",
    "label": "CONF_MESSAGE[Lucene Search Engine]",
    "description": "CONF_MESSAGE[Zend_Search_Lucene implementation to index all files and search a whole repository quickly.]",
    "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
    "xsi:noNamespaceSchemaLocation": "file:../core.app/registry.xsd",
    "class_definition": {
      "filename": "plugins/index.lucene/class.LuceneIndexer.php",
      "classname": "LuceneIndexer"
    },
    "client_settings": {
      "resources": {
        "img_library": {
          "alias": "lucene_images",
          "path": "plugins/index.lucene/resources/images"
        },
        "i18n": {
          "namespace": "index.lucene",
          "path": "plugins/index.lucene/resources/i18n"
        }
      }
    },
    "server_settings": {
      "param": [
        {
          "name": "index_content",
          "type": "boolean",
          "label": "CONF_MESSAGE[Index Content]",
          "description": "CONF_MESSAGE[Parses the file when possible and index its content (see plugin global options)]",
          "mandatory": "true",
          "default": "false"
        },
        {
          "name": "index_meta_fields",
          "type": "string",
          "label": "CONF_MESSAGE[Index Meta Fields]",
          "description": "CONF_MESSAGE[Which additionnal fields to index and search]",
          "mandatory": "false",
          "default": ""
        },
        {
          "name": "repository_specific_keywords",
          "type": "string",
          "label": "CONF_MESSAGE[Repository keywords]",
          "description": "CONF_MESSAGE[If your repository path is defined dynamically by specific keywords like AJXP_USER, or your own, mention them here.]",
          "mandatory": "false",
          "default": ""
        }
      ],
      "global_param": [
        {
          "name": "PARSE_CONTENT_MAX_SIZE",
          "type": "string",
          "label": "CONF_MESSAGE[Parse Content Until]",
          "description": "CONF_MESSAGE[Skip content parsing and indexation for files bigger than this size (must be in Bytes)]",
          "mandatory": "true",
          "default": "500000"
        },
        {
          "name": "PARSE_CONTENT_HTML",
          "type": "string",
          "label": "CONF_MESSAGE[HTML files]",
          "description": "CONF_MESSAGE[List of extensions to consider as HTML file and parse content]",
          "mandatory": "true",
          "default": "html,htm"
        },
        {
          "name": "PARSE_CONTENT_TXT",
          "type": "string",
          "label": "CONF_MESSAGE[Text files]",
          "description": "CONF_MESSAGE[List of extensions to consider as Text file and parse content]",
          "mandatory": "true",
          "default": "txt"
        }
      ]
    },
    "registry_contributions": {
      "hooks": {
        "serverCallback": {
          "hookName": "node.change",
          "methodName": "updateNodeIndex",
          "defer": "true"
        }
      },
      "actions": {
        "action": [
          {
            "name": "search",
            "rightsContext": {
              "noUser": "true",
              "userLogged": "only",
              "read": "true",
              "write": "false",
              "adminOnly": "false"
            },
            "processing": {
              "serverCallback": {
                "methodName": "applyAction"
              }
            }
          },
          {
            "name": "check_lock",
            "rightsContext": {
              "noUser": "true",
              "userLogged": "only",
              "read": "true",
              "write": "false",
              "adminOnly": "false"
            },
            "processing": {
              "serverCallback": {
                "methodName": "applyAction"
              }
            }
          },
          {
            "name": "index",
            "gui": {
              "text": "index.lucene.1",
              "title": "index.lucene.2",
              "src": "lucene_image/ICON_SIZE/ark_view.png",
              "accessKey": "folder_access_key",
              "context": {
                "selection": "false",
                "dir": "true",
                "recycle": "false",
                "actionBar": "false",
                "actionBarGroup": "utils",
                "contextMenu": "true",
                "infoPanel": "false"
              }
            },
            "rightsContext": {
              "noUser": "true",
              "userLogged": "only",
              "read": "true",
              "write": "true",
              "adminOnly": "false"
            },
            "processing": {
              "clientCallback": {
                "prepareModal": "false",
                "$t": "var crtDir = app.getContextNode().getPath();var bgManager = app.actionBar.bgManager;bgManager.queueAction(\"index\", new Hash({dir:crtDir}), \"Indexing current folder\");bgManager.next();"
              },
              "serverCallback": {
                "methodName": "applyAction"
              }
            }
          }
        ]
      }
    },
    "dependencies": {
      "activePlugin": {
        "pluginName": "access.AJXP_STREAM_PROVIDER"
      }
    }
  }
}
